generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  relationMode      = "prisma"
}

model ImagesPet {
  id     String @id
  imgUrl String @db.Text
  petId  String @unique
}

model addresses {
  id         String   @id
  zipCode    String
  state      String
  city       String
  street     String
  number     String
  complement String?
  createdAt  DateTime
  updatedAt  DateTime
  userId     String   @unique

  @@index([userId])
}

model cao_cliente {
  co_cliente            Int     @id @default(autoincrement()) @db.UnsignedInt
  no_razao              String? @db.VarChar(50)
  no_fantasia           String? @db.VarChar(50)
  no_contato            String? @db.VarChar(30)
  nu_telefone           String? @db.VarChar(15)
  nu_ramal              String? @db.VarChar(6)
  nu_cnpj               String? @db.VarChar(18)
  ds_endereco           String? @db.VarChar(150)
  nu_numero             Int?
  ds_complemento        String? @db.VarChar(150)
  no_bairro             String  @default("") @db.VarChar(50)
  nu_cep                String? @db.VarChar(10)
  no_pais               String? @db.VarChar(50)
  co_ramo               BigInt?
  co_cidade             BigInt  @default(0)
  co_status             Int?    @db.UnsignedInt
  ds_site               String? @db.VarChar(50)
  ds_email              String? @db.VarChar(50)
  ds_cargo_contato      String? @db.VarChar(50)
  tp_cliente            String? @db.Char(2)
  ds_referencia         String? @db.VarChar(100)
  co_complemento_status Int?    @db.UnsignedInt
  nu_fax                String? @db.VarChar(15)
  ddd2                  String? @db.VarChar(10)
  telefone2             String? @db.VarChar(20)
}

model cao_fatura {
  co_fatura     Int      @id @default(autoincrement()) @db.UnsignedInt
  co_cliente    Int      @default(0)
  co_sistema    Int      @default(0)
  co_os         Int      @default(0)
  num_nf        Int      @default(0)
  total         Float    @default(0) @db.Float
  valor         Float    @default(0) @db.Float
  data_emissao  DateTime @default(dbgenerated("'1970-01-01'")) @db.Date
  corpo_nf      String   @db.Text
  comissao_cn   Float    @default(0) @db.Float
  total_imp_inc Float    @default(0) @db.Float
}

model cao_os {
  co_os              Int       @id @default(autoincrement())
  nu_os              Int?
  co_sistema         Int?      @default(0)
  co_usuario         String?   @default("0") @db.VarChar(50)
  co_arquitetura     Int?      @default(0)
  ds_os              String?   @default("0") @db.VarChar(200)
  ds_caracteristica  String?   @default("0") @db.VarChar(200)
  ds_requisito       String?   @db.VarChar(200)
  dt_inicio          DateTime? @db.Date
  dt_fim             DateTime? @db.Date
  co_status          Int?      @default(0)
  diretoria_sol      String?   @default("0") @db.VarChar(50)
  dt_sol             DateTime? @db.Date
  nu_tel_sol         String?   @default("0") @db.VarChar(20)
  ddd_tel_sol        String?   @db.VarChar(5)
  nu_tel_sol2        String?   @db.VarChar(20)
  ddd_tel_sol2       String?   @db.VarChar(5)
  usuario_sol        String?   @default("0") @db.VarChar(50)
  dt_imp             DateTime? @db.Date
  dt_garantia        DateTime? @db.Date
  co_email           Int?
  co_os_prospect_rel Int?
}

model cao_salario {
  co_usuario   String   @default("") @db.VarChar(20)
  dt_alteracao DateTime @default(dbgenerated("'1970-01-01'")) @db.Date
  brut_salario Float    @default(0) @db.Float
  liq_salario  Float    @default(0) @db.Float

  @@id([co_usuario, dt_alteracao])
}

model cao_usuario {
  co_usuario             String    @id @unique(map: "co_usuario") @default("") @db.VarChar(20)
  no_usuario             String    @default("") @db.VarChar(50)
  ds_senha               String    @default("") @db.VarChar(14)
  co_usuario_autorizacao String?   @db.VarChar(20)
  nu_matricula           BigInt?   @db.UnsignedBigInt
  dt_nascimento          DateTime? @default(dbgenerated("'1970-01-01'")) @db.Date
  dt_admissao_empresa    DateTime? @default(dbgenerated("'1970-01-01'")) @db.Date
  dt_desligamento        DateTime? @db.Date
  dt_inclusao            DateTime? @default(dbgenerated("'1970-01-01 00:00:00'")) @db.DateTime(0)
  dt_expiracao           DateTime? @default(dbgenerated("'1970-01-01'")) @db.Date
  nu_cpf                 String?   @db.VarChar(14)
  nu_rg                  String?   @db.VarChar(20)
  no_orgao_emissor       String?   @db.VarChar(10)
  uf_orgao_emissor       String?   @db.VarChar(2)
  ds_endereco            String?   @db.VarChar(150)
  no_email               String?   @db.VarChar(100)
  no_email_pessoal       String?   @db.VarChar(100)
  nu_telefone            String?   @db.VarChar(64)
  dt_alteracao           DateTime  @default(dbgenerated("'1970-01-01 00:00:00'")) @db.DateTime(0)
  url_foto               String?   @db.VarChar(255)
  instant_messenger      String?   @db.VarChar(80)
  icq                    Int?      @db.UnsignedInt
  msn                    String?   @db.VarChar(50)
  yms                    String?   @db.VarChar(50)
  ds_comp_end            String?   @db.VarChar(50)
  ds_bairro              String?   @db.VarChar(30)
  nu_cep                 String?   @db.VarChar(10)
  no_cidade              String?   @db.VarChar(50)
  uf_cidade              String?   @db.VarChar(2)
  dt_expedicao           DateTime? @db.Date

  @@index([co_usuario, no_usuario, dt_alteracao], map: "co_usuario_2")
}

model categories {
  id        String   @id
  name      String   @db.VarChar(120)
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model memories {
  id          String   @id
  title       String   @db.VarChar(120)
  description String   @db.Text
  coverImage  String?  @db.Text
  createdAt   DateTime
  userId      String

  @@index([userId])
}

model orders {
  id         String        @id
  status     orders_status
  paid       Boolean       @default(false)
  createdAt  DateTime
  updatedAt  DateTime
  userId     String        @unique
  totalPrice Float
}

model permissao_sistema {
  co_usuario             String   @default("") @db.VarChar(20)
  co_tipo_usuario        BigInt   @default(0) @db.UnsignedBigInt
  co_sistema             BigInt   @default(0) @db.UnsignedBigInt
  in_ativo               String   @default("S") @db.Char(1)
  co_usuario_atualizacao String?  @db.VarChar(20)
  dt_atualizacao         DateTime @default(dbgenerated("'1970-01-01 00:00:00'")) @db.DateTime(0)

  @@id([co_usuario, co_tipo_usuario, co_sistema])
  @@index([co_usuario, co_tipo_usuario, co_sistema, dt_atualizacao], map: "co_usuario")
}

model pets {
  id          String      @id
  name        String      @db.VarChar(120)
  type        pets_type
  species     String      @db.VarChar(120)
  gender      pets_gender
  age         String      @db.VarChar(120)
  description String      @db.Text
  status      pets_status @default(Available)
  createdAt   DateTime
  updatedAt   DateTime
  userId      String      @unique

  @@index([userId])
}

model products {
  id          String   @id
  name        String   @db.VarChar(120)
  description String   @db.Text
  price       Float
  stock       Int
  categoryId  String
  imgUrl      String?  @db.Text
  createdAt   DateTime @default(now())
  updatedAt   DateTime
  sku         String   @unique

  @@index([categoryId])
}

model products_orders {
  id        String @id
  productId String
  orderId   String
  price     Float
  quantity  Int

  @@index([orderId])
  @@index([productId])
}

model tasks {
  id          String   @id
  title       String   @db.VarChar(120)
  description String   @db.Text
  completed   Boolean  @default(false)
  createdAt   DateTime
  updatedAt   DateTime
  userId      String

  @@index([userId])
}

model users {
  id        String     @id
  name      String     @db.VarChar(120)
  email     String     @unique @db.VarChar(120)
  password  String?    @db.VarChar(120)
  createdAt DateTime
  role      users_role @default(User)
  updatedAt DateTime
}

enum orders_status {
  Created
  Running
  Done
  Failure
}

enum pets_type {
  Cat
  Dog
}

enum pets_gender {
  Female
  Male
}

enum users_role {
  User
  Admin
  Employee
}

enum pets_status {
  Available
  Adopted
}
